# This workflow will use github action server to build docker, then deploy docker image on your own server.
# Prevent overload, high cpu, high RAM usage on your own server.
# This not only work for Amazon Web Service, but also work for 3rd party server like Vietnix VPS, Digital Ocean, Viettel IDC,...
# Attention: Use your Visual Studio Code to open and copy ssh key, do not use cat command on terminal to copy key.
name: Deploy on server production

env:
  APP_ENV: ${{ secrets.PRODUCTION }}

on:
  push:
    branches: ["release"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Pull code
        uses: actions/checkout@v3

      - name: Extract env file multi line.
        run: |
          rm -r -f .env
          touch .env_temp
          echo $APP_ENV | tee .env_temp
          sed 's/ /\n/g' .env_temp >> .env
          rm -r -f .env_temp

      - name: Docker
        run: |
          docker build -t todo-list-website .
          docker save -o todo-list-website.tar todo-list-website

      - name: Copy Docker image to ec2 use SSH Key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PRODUCTION_SERVER_HOST }}
          username: ubuntu
          port: 22
          key: ${{ secrets.PRODUCTION_SERVER_KEY_SSH }}
          source: "todo-list-website.tar,docker-compose.yml"
          target: "~/todo-list-website"

      - name: Executing remote ssh commands using SSH Key
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PRODUCTION_SERVER_HOST }}
          username: ubuntu
          port: 22
          key: ${{ secrets.PRODUCTION_SERVER_KEY_SSH }}
          script: |
            sudo docker system prune -a -f
            cd ~/todo-list-website
            sudo snap install docker
            sudo docker load --input todo-list-website.tar
            sudo docker-compose up -d --force-recreate
            rm -rf todo-list-website.tar
